<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACYAAAAmCAYAAACoPemuAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAGSSURBVFhH7ddNKwVRHMfxS3l+WMlOVngRFmStCCVvQDZY
        WihrW5SFsPcOUJ6ykI0XoLDwkJLIjjx9f7m37uJ/xsw4c67F/OpT0535/8/M3Ol0TiFPnjzx0oiqn8NE
        UY1qvaUJMzjAC77wgQtsoA+u9GMTl1CNatVjH9NIfaPDuIMaRtFNd6OUHhzBurbcLYaQKLP4hNXQojcx
        irHisXWNRW9S/0is6ClKrz6J9yLrXBSNNYjINOAaVoMs3SDym5uCVRjCJJzZhVUUwjaceYBVFMI9zFQj
        zUfvi8bWPZh5hlUUwhOcOYVVFMIJnFmAVRTCPJzpwCuswiy9oRORWYdVnKU1/Jo2hJw2HtGOWJmA1SQL
        40iUVViNfFpB4tRgB1ZDH/ZQi1RpRRZzm+asFvwpWl5rOWwNkMYx9MBeorWSj5XHIZrhNVpEbsEaMA7V
        qkcm0TZsDklWIdo7LMK5cvCZuJsOXTOCoNGW7QzWDYnOdaEiqccyyrd6Ol5CHSqeXpzjCgP64T9F04D3
        qSBPnmxSKHwDflhiL/+Eg4MAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnPrint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACYAAAAmCAYAAACoPemuAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAG4SURBVFhH7di/K8RxHMfxI0oYjZL8Aya7YqAMFiWKLBZJ
        fowWZWBUKMVEKQM7A6PMKMpmYPQrEfF81b3runvf93v3/X6dG76veiyfPu8fJ9d97zJp0lRBOtGbMPWM
        nSP8JEw9Y6fqFztGR0zqEXmxWmzgIOseSb1Ke5Hqaf01SzNDMw8V50tysXxzCEwLXuEVX2AoJvXwemum
        ZhfNErzCStDsormFV1QJN3BTh294RZWg2dqhIA3wCipJOxQkXSxAuli5QhfbRTM2c86+MIJ6lBvVjCLs
        XR+62KwOyATs7FQHMXMG6+cJXewNh3jKOduHpQtbJdJdiz60rZ8ndDHPDizD8O54dNeyB++OibSYHk8s
        3Tgpke5atuH1NpEWW0XcrMHrbdzFlEd4BbKAuFmE11seUDTj+IRXOAbLAO4CXMPLJLzemqnZgWnDIPRg
        NwMr7oEl7J//HV76YXemoRmapZllpQ/WqFUH2eh74UqAZXhph/XT98vIsb/YM2p0EDPq8QL1nNJB1NhH
        0iW8r2NRXEE91xE551CTv6DekdKID3hNk6B3YhPKjp4u8n8MSZpmpEnzD8lkfgFxqkyuYb88hAAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>